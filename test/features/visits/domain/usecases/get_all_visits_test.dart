import 'package:flutter_test/flutter_test.dart';
import 'package:mockito/annotations.dart';
import 'package:mockito/mockito.dart';
import 'package:dartz/dartz.dart';
import 'package:visits_tracker_v5/core/errors/failures.dart';
import 'package:visits_tracker_v5/core/usecases/usecase.dart';
import 'package:visits_tracker_v5/features/visits/domain/entities/visit.dart';
import 'package:visits_tracker_v5/features/visits/domain/repositories/visit_repository.dart';
import 'package:visits_tracker_v5/features/visits/domain/usecases/get_all_visits.dart';

import 'get_all_visits_test.mocks.dart'; // Generated by mockito

@GenerateMocks([VisitRepository])
void main() {
  late GetAllVisits usecase;
  late MockVisitRepository mockVisitRepository;

  setUp(() {
    mockVisitRepository = MockVisitRepository();
    usecase = GetAllVisits(mockVisitRepository);
  });

  final tVisits = [
    Visit(
      id: 1,
      customerId: 1,
      visitDate: DateTime.utc(2025, 5, 20, 10, 0),
      status: 'Completed',
      location: 'Test Location',
      notes: 'Test Notes',
      activitiesDoneIds: [1, 2],
      createdAt: DateTime.utc(2025, 5, 19, 10, 0),
    ),
  ];

  test(
    'should get all visits from the repository',
        () async {
      // Arrange
      when(mockVisitRepository.getAllVisits())
          .thenAnswer((_) async => Right(tVisits));

      // Act
      final result = await usecase(const NoParams());

      // Assert
      expect(result, Right(tVisits));
      verify(mockVisitRepository.getAllVisits());
      verifyNoMoreInteractions(mockVisitRepository);
    },
  );

  test(
    'should return a ServerFailure when the repository call is unsuccessful',
        () async {
      // Arrange
      when(mockVisitRepository.getAllVisits())
          .thenAnswer((_) async => Left(ServerFailure(message: 'Server error')));

      // Act
      final result = await usecase(const NoParams());

      // Assert
      expect(result, Left(ServerFailure(message: 'Server error')));
      verify(mockVisitRepository.getAllVisits());
      verifyNoMoreInteractions(mockVisitRepository);
    },
  );
}